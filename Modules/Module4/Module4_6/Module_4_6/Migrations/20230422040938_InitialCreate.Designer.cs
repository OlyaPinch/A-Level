// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Module_4_6;

#nullable disable

namespace Module_4_6.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230422040938_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Module_4_6.DbModels.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ArtistId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfDeath")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstagramUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Artist", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(1935, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfDeath = new DateTime(1977, 8, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Elvis Presley"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(1944, 12, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Brenda Lee"
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(1958, 8, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InstagramUrl = "https://www.instagram.com/madonna/",
                            Name = "Madonna"
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = new DateTime(1901, 8, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfDeath = new DateTime(1971, 7, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Louis Armstrong"
                        },
                        new
                        {
                            Id = 5,
                            DateOfBirth = new DateTime(1901, 8, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mariah Carey"
                        },
                        new
                        {
                            Id = 6,
                            DateOfBirth = new DateTime(1991, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InstagramUrl = "https://www.instagram.com/teddysphotos/",
                            Name = "Ed Sheeran"
                        });
                });

            modelBuilder.Entity("Module_4_6.DbModels.ArtistSong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ArtistSongId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfSinging")
                        .HasColumnType("datetime2");

                    b.Property<int>("SongId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.HasIndex("SongId");

                    b.ToTable("Artist_Song", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArtistId = 1,
                            DateOfSinging = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SongId = 1
                        },
                        new
                        {
                            Id = 2,
                            ArtistId = 2,
                            DateOfSinging = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SongId = 1
                        },
                        new
                        {
                            Id = 3,
                            ArtistId = 4,
                            DateOfSinging = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SongId = 2
                        },
                        new
                        {
                            Id = 4,
                            ArtistId = 5,
                            DateOfSinging = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SongId = 4
                        },
                        new
                        {
                            Id = 5,
                            ArtistId = 4,
                            DateOfSinging = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SongId = 6
                        },
                        new
                        {
                            Id = 6,
                            ArtistId = 6,
                            DateOfSinging = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SongId = 5
                        });
                });

            modelBuilder.Entity("Module_4_6.DbModels.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GenreId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genre", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Country"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Rock"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Pop"
                        },
                        new
                        {
                            Id = 4,
                            Title = "R&B"
                        },
                        new
                        {
                            Id = 5,
                            Title = "Blues"
                        });
                });

            modelBuilder.Entity("Module_4_6.DbModels.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SongId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int?>("GenreId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleasedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Song", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Duration = 210,
                            GenreId = 1,
                            ReleasedDate = new DateTime(1972, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Always on My Mind"
                        },
                        new
                        {
                            Id = 2,
                            Duration = 81,
                            GenreId = 3,
                            ReleasedDate = new DateTime(1967, 8, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "What a Wonderful World"
                        },
                        new
                        {
                            Id = 3,
                            Duration = 81,
                            GenreId = 3,
                            ReleasedDate = new DateTime(1967, 8, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Ray of Light"
                        },
                        new
                        {
                            Id = 4,
                            Duration = 202,
                            GenreId = 4,
                            ReleasedDate = new DateTime(2005, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "We Belong Together"
                        },
                        new
                        {
                            Id = 5,
                            Duration = 163,
                            GenreId = 2,
                            ReleasedDate = new DateTime(2022, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "2step"
                        },
                        new
                        {
                            Id = 6,
                            Duration = 186,
                            GenreId = 5,
                            ReleasedDate = new DateTime(1935, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Basin Street Blues"
                        },
                        new
                        {
                            Id = 7,
                            Duration = 150,
                            ReleasedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Song without genre"
                        });
                });

            modelBuilder.Entity("Module_4_6.DbModels.ArtistSong", b =>
                {
                    b.HasOne("Module_4_6.DbModels.Artist", "Artist")
                        .WithMany("ArtistSong")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Module_4_6.DbModels.Song", "Song")
                        .WithMany("ArtistSong")
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("Module_4_6.DbModels.Song", b =>
                {
                    b.HasOne("Module_4_6.DbModels.Genre", "Genre")
                        .WithMany("Songs")
                        .HasForeignKey("GenreId");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Module_4_6.DbModels.Artist", b =>
                {
                    b.Navigation("ArtistSong");
                });

            modelBuilder.Entity("Module_4_6.DbModels.Genre", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("Module_4_6.DbModels.Song", b =>
                {
                    b.Navigation("ArtistSong");
                });
#pragma warning restore 612, 618
        }
    }
}
